include ../../templates/partials/mixins.pug

header-public

section.container-fluid.container-content
	div.row
		//Slider
		div.col-slider
			ngx-slick.slider(#slickModal="slick-modal", [config]="slideConfig")
				//Item
				article.slide(ngxSlickItem, *ngFor="let slide of slides; let keySlide = index ")
					
					div.slide-img
						a(*ngIf="slide.url; else slide_img" href="{{slide.url}}")
							
							img(src="{{'assets/images/slides/'+slide.imgBig}}",
								srcset="{{'assets/images/slides/'+slide.imgBig}} 1000w, {{'assets/images/slides/'+slide.imgThumb}} 770w",
								sizes="(min-width:770px) 100%, 100% " )

						ng-template(#slide_img="")
							img(src="{{'assets/images/slides/'+slide.imgBig}}",
								srcset="{{'assets/images/slides/'+slide.imgBig}} 1000w, {{'assets/images/slides/'+slide.imgThumb}} 770w",
								sizes="(min-width:770px) 100%, 100% ")
				//Item
		///-Slider
		//Inscripcion
		div.col-form
			h2.text-center Lorem Ipsum
			form#ins.form-home(#inscripcion="ngForm", novalidate)
				
				//Nombre
				div.form-group
					label(for="nombre") Nombre
					input(type="text", id="nombre", name="nombre", required, pattern="[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+", [(ngModel)]="inscripcionForm.nombre", #nombre="ngModel", (focus)="focusIn($event)", (focusout)="focusOut($event)")
					div.msn-place(*ngIf='nombre.errors && (nombre.dirty || nombre.touched || formSubmitAttempt)')
						div([hidden]="!nombre.hasError('required')") El nombre es requerido
						div([hidden]="!nombre.hasError('pattern')") El nombre no es correcto

				///-Nombre

				//Apellidos		
				div.form-group
					label(for="apellidos") Apellidos
					input(type="text", id="apellidos", name="apellidos", required, pattern="[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+", [(ngModel)]="inscripcionForm.apellido", #apellido="ngModel", (focus)="focusIn($event)", (focusout)="focusOut($event)")
					div.msn-place(*ngIf='apellido.errors && (apellido.dirty || apellido.touched || formSubmitAttempt)')
						div([hidden]="!apellido.hasError('required')") Los apellidos son requeridos
						div([hidden]="!apellido.hasError('pattern')") Los apellidos son requeridos

				///-Apellidos

				//email
				div.form-group
					
					label(for="email") Email
					input(type="email", id="email", name="email", required, pattern="[a-zA-Z0-9_-]+([.][a-zA-Z0-9_-]+)*@[a-zA-Z0-9_-]+([.][a-zA-Z0-9_-]+)*[.][a-zA-Z]{1,5}", [(ngModel)]="inscripcionForm.correo",#correo="ngModel", (focus)="focusIn($event)", (focusout)="focusOut($event)")
					div.msn-place(*ngIf='correo.errors && (correo.dirty || correo.touched || formSubmitAttempt)')
						div([hidden]="!correo.hasError('required')") El email es requerido
						div([hidden]="!correo.hasError('pattern')") El email no es correcto
				
				///-email


				//Teléfono		
				div.form-group
					label(for="tel") Teléfono
					input(type="number", min="0", id="tel", name="tel", required, [(ngModel)]="inscripcionForm.telefono",#telefono="ngModel",pattern="\\d{7,10}", (focus)="focusIn($event)", (focusout)="focusOut($event)")
					div.msn-place(*ngIf='telefono.errors && (telefono.dirty || telefono.touched || formSubmitAttempt)')
						div([hidden]="!telefono.hasError('required')") El teléfono es requerido
						div([hidden]="!telefono.hasError('pattern')") El teléfono no es correcto

				///-Teléfono

				//Departamento
				div.form-group.form-dep
					label(for="departamento") Departamento
					div.select
						select(id="departamento", name="departamento", required, [(ngModel)]="inscripcionForm.departamento", #departamento="ngModel", (change)="getCiudades($event)", (focus)="focusIn($event)", (focusout)="focusOut($event)")
							option(*ngFor="let departamento of departamentos; let departamentoKey = index",[value]="departamento.id") {{departamento.nombre}}
					div.msn-place(*ngIf='departamento.errors && (departamento.dirty || departamento.touched || formSubmitAttempt)')
						div([hidden]="!departamento.hasError('required')") El departamento es requerido

				///-Departamento

				//Municipios
				div.form-group
					label(for="municipio") Municipio
					div.select
						select(id="municipio", name="municipio", required, [(ngModel)]="inscripcionForm.idCiudad", #ciudad="ngModel", (focus)="focusIn($event)", (focusout)="focusOut($event)")
							option(*ngFor="let ciudad of ciudades; let citieKey = index",[value]="ciudad.id") {{ciudad.nombre}}
					div.msn-place(*ngIf='ciudad.errors && (ciudad.dirty || ciudad.touched || formSubmitAttempt)')
						div([hidden]="!ciudad.hasError('required')") El municipio es requerido

				///-Municipios

				//Acepto terminos
				div.form-group.form-checkbox
					div.checkbox
						input(type="checkbox", name="politicasH", id="politicasH", required, [(ngModel)]="inscripcionForm.politicas",#politicas="ngModel")
						label(for="politicasH")
							| Acepto  
							a([routerLink]="['/terminos']", target="_blank") Términos y Condiciones.

						div.msn-place(*ngIf='politicas.errors && (politicas.dirty || politicas.touched || formSubmitAttempt)')
							div([hidden]="!politicas.hasError('required')") Los términos y condiciones son requeridos


				///-Acepto terminos

				//Submit
				button.btn.btn-submit((click)="save(inscripcion)") Enviar
				///-Submit

				div.clearfix
		///-Inscripcion


section.container-fluid
	div.row
		//Noticias Recientes
		div.col-noticias-recientes
			
			div.box(*ngFor="let noticia of noticiasR;")
				div.box-header
					span.btn.btn-read((click)="ruta(noticia.url)") Leer
					//Imagen noticia
					+image("{{'noticias/'+noticia.imgThumb}}", "{{noticia.titulo}}")
					///-Imagen noticia
				
				div.box-content
					p {{noticia.titulo}}

		///-Noticias Recientes

		//Btn propuestas
		div.col-banner
			a([routerLink]="['/propuestas']")
				+image('layout/conoce-propuestas.svg', 'Conoce Nuestras Propuestas')
		///-Btn propuestas


section.container-fluid.container-banner-bio
	div.row
		div.col-bio
			h2
				| Biografía de:
				strong Germán Vargas Lleras

			a.btn.btn-read([routerLink]="['/biografia']") Leer


footer-public


